(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{113:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return s}));var a=t(3),r=t(8),i=(t(0),t(190)),o={id:"hypi-cli-angular",title:"Use Hypi in an Angular Project",sidebar_label:"Angular",slug:"/hypi-cli-angular"},p={unversionedId:"hypi-cli-angular",id:"hypi-cli-angular",isDocsHomePage:!1,title:"Use Hypi in an Angular Project",description:"In this guide, we will access Hypi APIs from the Angular project using the Hypi CLI.",source:"@site/content/hypi-cli-angular.md",slug:"/hypi-cli-angular",permalink:"/docs/hypi-cli-angular",editUrl:"https://github.com/hypi-universe/docs/edit/master/content/hypi-cli-angular.md",version:"current",sidebar_label:"Angular",sidebar:"docs",previous:{title:"Use Hypi in a ReactJS Project",permalink:"/docs/hypi-cli-react"},next:{title:"GraphQL Overview",permalink:"/docs/graphql"}},l=[{value:"Create Angular App",id:"create-angular-app",children:[]},{value:"Login",id:"login",children:[]},{value:"Hypi Init",id:"hypi-init",children:[]},{value:"Hypi GraphQL settings",id:"hypi-graphql-settings",children:[]},{value:"Hypi Sync",id:"hypi-sync",children:[]},{value:"Using GraphQL hooks",id:"using-graphql-hooks",children:[]},{value:"Authentication using Apollo Client",id:"authentication-using-apollo-client",children:[]}],c={toc:l};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"In this guide, we will access Hypi APIs from the Angular project using the Hypi CLI."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Prerequisites"),": Knowledge of application development using Angular. Development set up for Angular."),Object(i.b)("h3",{id:"create-angular-app"},"Create Angular App"),Object(i.b)("p",null,"Create an angular app using ",Object(i.b)("a",{parentName:"p",href:"https://angular.io/tutorial/toh-pt0"},"this")," tutorial or use an example from ",Object(i.b)("a",{parentName:"p",href:"https://github.com/hypi-universe/hypi-cli-angular-example"},"here")," ."),Object(i.b)("p",null,"In this example, we will use the apollo client as the graphql client. Add the following dependencies to ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'"@apollo/client": "^3.3.19",\n"apollo-angular": "^2.4.0",\n"graphql": "^15.5.0",\n')),Object(i.b)("p",null,"Let's start using Hypi CLI now."),Object(i.b)("h3",{id:"login"},"Login"),Object(i.b)("p",null,"On the command line, go to your Angular application folder. Login to your Hypi account using ",Object(i.b)("a",{parentName:"p",href:"/docs/hypi-cli-intro#hypi-login"},"hypi login")," command. After successful login, the user config file will be placed in ",Object(i.b)("inlineCode",{parentName:"p"},"~/.config/hypi/config.json")," . In case of Windows, the file will be created in ",Object(i.b)("inlineCode",{parentName:"p"},"\\Users\\user\\AppData\\Local")),Object(i.b)("p",null,"Here, are the contents of the file. It makes the connection between Hypi and Angular app."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'{\n  "domain": "latest.store.hypi.01f2ga50p2mzkmyqse17gd2bae.hypi.app",\n  "sessionToken": "Auth-Token",\n  "sessionExpires": 1626580838\n}\n')),Object(i.b)("h3",{id:"hypi-init"},"Hypi Init"),Object(i.b)("p",null,"Use the ",Object(i.b)("inlineCode",{parentName:"p"},"hypi init")," command to initialize a new hypi App and Instance in your Angular project folder."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"    USAGE\n      $ hypi init [WEBSITE] [NAME] [LABEL] [DOMAIN]\n    \n    OPTIONS\n      -h, --help           show CLI help\n      -i, --have_instance\n    \n    EXAMPLES\n      $ hypi init -i\n      $ hypi init --have_instance\n      $ hypi init\n")),Object(i.b)("p",null,"Go to your Angular project folder on the command line and run ",Object(i.b)("inlineCode",{parentName:"p"},"hypi init")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},">hypi init\nThis command will walk you through creating app.yaml and instance.yaml files.\n? Do you have a Hypi instance created at https://hypi.app that you\u2019d like to use? No\n? App name?  AngularApp\n? App label?  AngularApp\n? Website?  https://hypi.app/apps\n? Domain(Optional)?\nInit done successfully, Now write your schema then run the hypi sync command to generate your app's API\n")),Object(i.b)("p",null,"This creates a  ",Object(i.b)("inlineCode",{parentName:"p"},".hypi")," folder in your Angular project folder. Within ",Object(i.b)("inlineCode",{parentName:"p"},".hypi"),", three files are created. ",Object(i.b)("inlineCode",{parentName:"p"},"app.yaml"),", ",Object(i.b)("inlineCode",{parentName:"p"},"instance.yaml")," and ",Object(i.b)("inlineCode",{parentName:"p"},"schema.graphql"),". The files app.yaml and instance.yaml has Hypi ",Object(i.b)("inlineCode",{parentName:"p"},"App and Instance")," details. "),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"You should write your schema inside ",Object(i.b)("inlineCode",{parentName:"p"},"schema.graphql")," file."))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"app.yaml\n========\nwebsite: https://hypi.app/apps\nname: AngularApp\nlabel: AngularApp\nreleases:\n  - name: latest\n    schema:\n      types: schema.graphql\n    status: PUBLISHED\n    notes: latest version\n    hypi:\n      id: 01F8EMYY0935THH0GX40K7QESY\nhypi:\n  id: 01F8EMYY01YDD2HB0WH8E1AZJW\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"instance.yaml\n=============\ndomain: engulfs.apps.hypi.app\nrelease:\n  name: latest\n  hypi:\n    id: 01F8EMYY0935THH0GX40K7QESY\nhypi:\n  id: 01F8EMZ1PN1ANAS1C15K6DD63H\n")),Object(i.b)("p",null,"The new app gets created on the Hypi account. If an existing domain is not provided then a new domain also gets created."),Object(i.b)("p",null,"If you want to use an existing domain on the Hypi website instead of creating a new one, you may provide that domain that as well."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"hypi init\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"This command will walk you through creating app.yaml and instance.yaml files.\n? Do you have a Hypi instance created at https://hypi.app that you\u2019d like to use? Yes\n? Please enter a valid domain engulfs.apps.hypi.app\nInit done successfully, Now write your schema then run the hypi sync command to generate your app's API\n")),Object(i.b)("p",null,"In this case, the existing schema will get imported. "),Object(i.b)("h3",{id:"hypi-graphql-settings"},"Hypi GraphQL settings"),Object(i.b)("p",null,"You may edit the schema in the ",Object(i.b)("inlineCode",{parentName:"p"},"schema.graphql"),"\nLet's edit the schema, to add the data types. Here, we are adding Product data type."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"type Product {\n    hypi: Hypi\n    title: String!\n    description: String!\n    price: Float\n}\n")),Object(i.b)("p",null,"Inside ",Object(i.b)("inlineCode",{parentName:"p"},"src/graphql")," folder, add files related to GraphQl queries and mutations."),Object(i.b)("p",null,"Here is the sample Product Query file : ",Object(i.b)("inlineCode",{parentName:"p"},"src/graphql/products.graphql")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"query products($arcql: String!) {\n    find(type: Product, arcql: $arcql) {\n        edges {\n            node {\n               ...ProductFields\n            }\n        }\n    }\n}\n\nfragment ProductFields on Product {\n   hypi {\n        id\n    }\n    title\n    description\n}    \n")),Object(i.b)("p",null,"You may replace the type ",Object(i.b)("inlineCode",{parentName:"p"},"Product")," with your own data type and fields like ",Object(i.b)("inlineCode",{parentName:"p"},"title/description")," with your own fields."),Object(i.b)("p",null,"Now, add Products Mutation: ",Object(i.b)("inlineCode",{parentName:"p"},"src/graphql/products-mutation.graphql")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"mutation upsert($values:HypiUpsertInputUnion!) {\n  upsert(values:$values)\n    {\n        id\n    }\n}\n")),Object(i.b)("h3",{id:"hypi-sync"},"Hypi Sync"),Object(i.b)("p",null,"You need to generate graphql Angular schema file to use Hypi APIs within the Angular typescript project. Use the ",Object(i.b)("inlineCode",{parentName:"p"},"hypi sync angular")," command for that."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"    USAGE\n      $ hypi sync angular\n    \n    OPTIONS\n      -h, --help  show CLI help\n    \n    EXAMPLE\n      $ hypi sync\n")),Object(i.b)("p",null,"Now run ",Object(i.b)("inlineCode",{parentName:"p"},"hypi sync")," to generate angular schema file."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"hypi sync angular\nApp created with id : 01F8EMYY01YDD2HB0WH8E1AZJW\nInstance created with id : 01F8EMZ1PN1ANAS1C15K6DD63H\nupdateAppYamlFile done\nupdateInstanceYamlFile done\nIntrospection done\nSync Process... done\nThe file was succesfully generated!\n")),Object(i.b)("p",null,"After syncing, ",Object(i.b)("inlineCode",{parentName:"p"},"graphql.ts")," files get created in the ",Object(i.b)("inlineCode",{parentName:"p"},"\\src\\generated")," folder. Also, ",Object(i.b)("inlineCode",{parentName:"p"},"generated-schema.graphql")," file gets generated in the ",Object(i.b)("inlineCode",{parentName:"p"},".hypi")," folder that has full hypi schema."),Object(i.b)("p",null,"Inside ",Object(i.b)("inlineCode",{parentName:"p"},"graphql.ts")," file, you will find services for the query and the mutation to be used inside your angular components."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"export class UpsertMutationService extends Apollo.Mutation<UpsertMutation, UpsertMutationVariables> {\n    document = UpsertDocument;\n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"  export class ProductsQueryService extends Apollo.Query<ProductsQuery, ProductsQueryVariables> {\n    document = ProductsDocument;\n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\n")),Object(i.b)("p",null,"Now you are ready to create your Angular application using Hypi APIs!"),Object(i.b)("h3",{id:"using-graphql-hooks"},"Using GraphQL hooks"),Object(i.b)("p",null,"Inside ",Object(i.b)("inlineCode",{parentName:"p"},"src/app/products")," folder, add Product Component :",Object(i.b)("inlineCode",{parentName:"p"},"products.component.ts")," file. This file will access the graphql queries and mutations using the created services."),Object(i.b)("p",null,"Here is the content of the entire file. You may modify this file to use your own services."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"},"import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ProductsQueryService, UpsertMutationService } from '../../generated/graphql';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\n\nexport class ProductsComponent implements OnInit {\n\n  loading!: boolean;\n\n  products!: Observable<any>;\n  productForm = new FormGroup({\n    title: new FormControl(''),\n    description: new FormControl(''),\n    price: new FormControl(0),\n  });\n  constructor(private productsQueryService: ProductsQueryService,\n    private upsertMutationService: UpsertMutationService) { }\n\n  ngOnInit(): void {\n   this.getProducts()\n  }\n\n  getProducts(){\n    this.products = this.productsQueryService\n    .watch({ arcql: '*' }, { fetchPolicy: 'network-only' })\n    .valueChanges.pipe(map(result => result.data.find.edges));\n  }\n\n  onSubmit() {\n    console.warn('hi');\n    this.upsertMutationService.mutate({\n      values: {\n        Product: [\n          {\n            title: this.productForm.get('title')?.value,\n            description: this.productForm.get('description')?.value,\n            price: this.productForm.get('price')?.value,\n          }\n        ]\n      }\n    }).subscribe(() => {\n      this.getProducts()\n    });\n  }\n\n}\n")),Object(i.b)("p",null,"Let's try to understand the usage of services in the class ProductsComponent."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"First, we import the services from ",Object(i.b)("inlineCode",{parentName:"li"},"graphql.ts")," file.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"import { ProductsQueryService, UpsertMutationService } from '../../generated/graphql';\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Here, you retreive  the data from the ",Object(i.b)("inlineCode",{parentName:"li"},"Product")," data type using ",Object(i.b)("inlineCode",{parentName:"li"},"ProductQueryService")," providing the ",Object(i.b)("a",{parentName:"li",href:"https://docs.hypi.app/docs/arcql"},"arcql statements")," under ",Object(i.b)("inlineCode",{parentName:"li"},"watch"),".")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"getProducts(){\n    this.products = this.productsQueryService\n    .watch({ arcql: '*' }, { fetchPolicy: 'network-only' })\n    .valueChanges.pipe(map(result => result.data.find.edges));\n  }\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Insert data using the ",Object(i.b)("inlineCode",{parentName:"li"},"upsertMutationService"),". Data from the ",Object(i.b)("inlineCode",{parentName:"li"},"productForm")," gets inserted into the Product table.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"    this.upsertMutationService.mutate({\n      values: {\n        Product: [\n          {\n            title: this.productForm.get('title')?.value,\n            description: this.productForm.get('description')?.value,\n            price: this.productForm.get('price')?.value,\n          }\n        ]\n      }\n    }).subscribe(() => {\n      this.getProducts()\n    });\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Inside your main App Module (",Object(i.b)("inlineCode",{parentName:"li"},"app.module.ts"),") file, declare the ",Object(i.b)("inlineCode",{parentName:"li"},"ProductComponent")," class.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"  declarations: [\n    AppComponent,\n    ProductComponent\n  ]\n")),Object(i.b)("h3",{id:"authentication-using-apollo-client"},"Authentication using Apollo Client"),Object(i.b)("p",null,"To make an HTTP connection to Hypi Endpoint, we use Apollo client. Following code demonstrates how to make this connection. Replace Hypi Authorization Token (Auth-Token) and hypi domain. This code has been added in the ",Object(i.b)("inlineCode",{parentName:"p"},"app.module.ts")," file."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-typescript"}," providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory(httpLink: HttpLink) {\n        const http = httpLink.create({ uri: 'https://api.hypi.app/graphql' });\n        const authToken = 'Auth-Token'\n        const domain = 'teething.apps.hypi.app'\n        const middleware = new ApolloLink((operation, forward) => {\n          operation.setContext({\n            headers: new HttpHeaders()\n              .set(\n                'Authorization',\n                `Bearer ${authToken}`,\n              )\n              .set('hypi-domain', `${domain}`),\n          });\n          return forward(operation);\n        });\n        const link = middleware.concat(http);\n        return {\n          link,\n          cache: new InMemoryCache(),\n        };\n      },\n      deps: [HttpLink],\n    },\n  ],\n")),Object(i.b)("p",null,"Run the application using ",Object(i.b)("inlineCode",{parentName:"p"},"ng serve")," command. If you face an issue with Angular Command line, you may check ",Object(i.b)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/angular-command-line-interface-explained"},"this")," guide."),Object(i.b)("p",null,"This is the simplest way to use Hypi GraphQL queries and Mutations inside Angular application!"))}s.isMDXComponent=!0},190:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),s=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},u=function(e){var n=s(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),b=a,h=u["".concat(o,".").concat(b)]||u[b]||d[b]||i;return t?r.a.createElement(h,p(p({ref:n},c),{},{components:t})):r.a.createElement(h,p({ref:n},c))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=b;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);