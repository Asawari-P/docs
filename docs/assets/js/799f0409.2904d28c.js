(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{126:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),i=n(8),o=(n(0),n(187)),c={id:"openwhisk-conductors",title:"Conductors",sidebar_label:"Conductors",slug:"/openwhisk-conductors"},r={unversionedId:"openwhisk-conductors",id:"openwhisk-conductors",isDocsHomePage:!1,title:"Conductors",description:"Conductor actions make it possible to build and invoke a series of actions, similar to sequences. However, whereas the components of a sequence action must be specified before invoking the sequence, conductor actions can decide the series of actions to invoke at run time.",source:"@site/content/openwhisk-conductors.md",slug:"/openwhisk-conductors",permalink:"/docs/openwhisk-conductors",editUrl:"https://github.com/hypi-universe/docs/edit/master/content/openwhisk-conductors.md",version:"current",sidebar_label:"Conductors",sidebar:"docs",previous:{title:"Action Sequences",permalink:"/docs/openwhisk-sequences"},next:{title:"Packages",permalink:"/docs/openwhisk-packages"}},s=[{value:"Conductor annotation",id:"conductor-annotation",children:[]},{value:"Invocation",id:"invocation",children:[]},{value:"Activations",id:"activations",children:[]},{value:"Continuations",id:"continuations",children:[]},{value:"Limits",id:"limits",children:[]}],l={toc:s};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Conductor actions make it possible to build and invoke a series of actions, similar to sequences. However, whereas the components of a sequence action must be specified before invoking the sequence, conductor actions can decide the series of actions to invoke at run time."),Object(o.b)("p",null,"In this document, we specify conductor actions and illustrate them with a simple example: a ",Object(o.b)("em",{parentName:"p"},"tripleAndIncrement")," action."),Object(o.b)("p",null,"Suppose we define a ",Object(o.b)("em",{parentName:"p"},"triple")," action in a source file ",Object(o.b)("inlineCode",{parentName:"p"},"triple.js"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"function main({ value }) { return { value: value * 3 } }\n")),Object(o.b)("p",null,"We create the action ",Object(o.b)("em",{parentName:"p"},"triple"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"wsk action create triple triple.js\n")),Object(o.b)("p",null,"We define an ",Object(o.b)("em",{parentName:"p"},"increment")," action in a source file ",Object(o.b)("inlineCode",{parentName:"p"},"increment.js"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"function main({ value }) { return { value: value + 1 } }\n")),Object(o.b)("p",null,"We create the action ",Object(o.b)("em",{parentName:"p"},"increment"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"wsk action create increment increment.js\n")),Object(o.b)("h3",{id:"conductor-annotation"},"Conductor annotation"),Object(o.b)("p",null,"We define the ",Object(o.b)("em",{parentName:"p"},"tripleAndIncrement")," action in a source file ",Object(o.b)("inlineCode",{parentName:"p"},"tripleAndIncrement.js"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-javascript"},"function main(params) {\n    let step = params.$step || 0\n    delete params.$step\n    switch (step) {\n        case 0: return { action: 'triple', params, state: { $step: 1 } }\n        case 1: return { action: 'increment', params, state: { $step: 2 } }\n        case 2: return { params }\n    }\n}\n")),Object(o.b)("p",null,"We create a ",Object(o.b)("em",{parentName:"p"},"conductor")," action by specifying the ",Object(o.b)("em",{parentName:"p"},"conductor")," annotation:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"wsk action create tripleAndIncrement tripleAndIncrement.js -a conductor true\n")),Object(o.b)("p",null,"A ",Object(o.b)("em",{parentName:"p"},"conductor action")," is an action with a ",Object(o.b)("em",{parentName:"p"},"conductor")," annotation with a value that is not ",Object(o.b)("em",{parentName:"p"},"falsy"),", i.e., a value that is different from zero, null, false, and the empty string."),Object(o.b)("p",null,"At this time, the conductor annotation is ignored on sequence actions."),Object(o.b)("p",null,"Because a conductor action is an action, it has all the attributes of an action (name, namespace, default parameters, limits...) and it can be managed as such, for instance using the ",Object(o.b)("inlineCode",{parentName:"p"},"wsk action")," CLI commands. It can be part of a package or be a web action."),Object(o.b)("p",null,"In essence, the ",Object(o.b)("em",{parentName:"p"},"tripleAndIncrement")," action builds a sequence of two actions by encoding a program with three steps:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"step 0: invoke the ",Object(o.b)("em",{parentName:"li"},"triple")," action on the input dictionary,"),Object(o.b)("li",{parentName:"ul"},"step 1: invoke the ",Object(o.b)("em",{parentName:"li"},"increment")," action on the output dictionary from step 1,"),Object(o.b)("li",{parentName:"ul"},"step 2: return the output dictionary from step 2.")),Object(o.b)("p",null,"At each step, the conductor action specifies how to continue or terminate the execution by means of a ",Object(o.b)("em",{parentName:"p"},"continuation"),". We explain continuations after discussing invocation and activations."),Object(o.b)("h3",{id:"invocation"},"Invocation"),Object(o.b)("p",null,"A conductor action is invoked like a regular ",Object(o.b)("a",{parentName:"p",href:"/docs/openwhisk-actions"},"action"),", for instance:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"wsk action invoke tripleAndIncrement -r -p value 3\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n    "value": 10\n}\n')),Object(o.b)("p",null,"Blocking and non-blocking invocations are supported. As usual, a blocking invocation may timeout before the completion of the invocation."),Object(o.b)("h3",{id:"activations"},"Activations"),Object(o.b)("p",null,"One invocation of the conductor action results in multiple activations, for instance:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"wsk action invoke tripleAndIncrement -p value 3\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"ok: invoked /_/tripleAndIncrement with id 4f91f9ed0d874aaa91f9ed0d87baaa07\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"wsk activation list\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"Datetime            Activation ID                    Kind      Start Duration   Status   Entity\n2019-03-16 20:03:00 8690bc9904794c9390bc9904794c930e nodejs:6  warm  2ms        success  guest/tripleAndIncrement:0.0.1\n2019-03-16 20:02:59 7e76452bec32401db6452bec32001d68 nodejs:6  cold  32ms       success  guest/increment:0.0.1\n2019-03-16 20:02:59 097250ad10a24e1eb250ad10a23e1e96 nodejs:6  warm  2ms        success  guest/tripleAndIncrement:0.0.1\n2019-03-16 20:02:58 4991a50ed9ed4dc091a50ed9edddc0bb nodejs:6  cold  33ms       success  guest/triple:0.0.1\n2019-03-16 20:02:57 aee63124f3504aefa63124f3506aef8b nodejs:6  cold  34ms       success  guest/tripleAndIncrement:0.0.1\n2019-03-16 20:02:57 22da217c8e3a4b799a217c8e3a0b79c4 sequence  warm  3.46s      success  guest/tripleAndIncrement:0.0.1\n")),Object(o.b)("p",null,"There are six activation records in this example, one matching the activation id returned on invocation (",Object(o.b)("inlineCode",{parentName:"p"},"22da217c8e3a4b799a217c8e3a0b79c4"),") plus five additional records for activations ",Object(o.b)("em",{parentName:"p"},"caused")," by this invocation. The ",Object(o.b)("em",{parentName:"p"},"primary")," activation record is the last one in the list because it has the earliest start time."),Object(o.b)("p",null,"The five additional activations are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"one activation of the ",Object(o.b)("em",{parentName:"li"},"triple")," action with input ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 3 }")," and output ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 9 }"),","),Object(o.b)("li",{parentName:"ul"},"one activation of the ",Object(o.b)("em",{parentName:"li"},"increment")," action with input ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 9 }")," and output ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 10 }"),","),Object(o.b)("li",{parentName:"ul"},"three ",Object(o.b)("em",{parentName:"li"},"secondary")," activations of the ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," action.")),Object(o.b)("h4",{id:"causality"},"Causality"),Object(o.b)("p",null,"We say the invocation of the conductor action is the ",Object(o.b)("em",{parentName:"p"},"cause")," of ",Object(o.b)("em",{parentName:"p"},"component")," action invocations as well as ",Object(o.b)("em",{parentName:"p"},"secondary")," activations of the conductor action. These activations are ",Object(o.b)("em",{parentName:"p"},"derived")," activations."),Object(o.b)("p",null,"The cause field of the ",Object(o.b)("em",{parentName:"p"},"derived")," activation records is set to the id for the ",Object(o.b)("em",{parentName:"p"},"primary")," activation record."),Object(o.b)("h4",{id:"primary-activations"},"Primary activations"),Object(o.b)("p",null,"The primary activation record for the invocation of a conductor action is a synthetic record similar to the activation record of a sequence action. The primary activation record summarizes the series of derived activations:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"its result is the result of the last action in the series (possibly unboxed, see below),"),Object(o.b)("li",{parentName:"ul"},"its logs are the ordered list of component and secondary activations,"),Object(o.b)("li",{parentName:"ul"},"its duration is the sum of the durations of these activations,"),Object(o.b)("li",{parentName:"ul"},"its start time is less or equal to the start time of the first derived activation in the series,"),Object(o.b)("li",{parentName:"ul"},"its end time is greater or equal to the end time of the last derived activation in the series.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"wsk activation get 4f91f9ed0d874aaa91f9ed0d87baaa07\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'ok: got activation 4f91f9ed0d874aaa91f9ed0d87baaa07\n{\n    "namespace": "guest",\n    "name": "composition",\n    "version": "0.0.1",\n    "subject": "guest",\n    "activationId": "4f91f9ed0d874aaa91f9ed0d87baaa07",\n    "start": 1516379705819,\n    "end": 1516379707803,\n    "duration": 457,\n    "response": {\n        "status": "success",\n        "statusCode": 0,\n        "success": true,\n        "result": {\n            "value": 12\n        }\n    },\n    "logs": [\n        "3624ad829d4044afa4ad829d40e4af60",\n        "a1f58ade9b1e4c26b58ade9b1e4c2614",\n        "47cb5aa5e4504f818b5aa5e450ef810f",\n        "eaec119273d94087ac119273d90087d0",\n        "fd89b99a90a1462a89b99a90a1d62a8e"\n    ],\n    "annotations": [\n        {\n            "key": "topmost",\n            "value": true\n        },\n        {\n            "key": "path",\n            "value": "guest/tripleAndIncrement"\n        },\n        {\n            "key": "conductor",\n            "value": true\n        },\n        {\n            "key": "kind",\n            "value": "sequence"\n        },\n        {\n            "key": "limits",\n            "value": {\n                "logs": 10,\n                "memory": 256,\n                "timeout": 60000\n            }\n        }\n    "publish": false\n}\n')),Object(o.b)("p",null,"If a component action itself is a sequence or conductor action, the logs contain only the id for the component activation. They do not contain the ids for the activations caused by this component. This is different from nested sequence actions."),Object(o.b)("h4",{id:"secondary-activations"},"Secondary activations"),Object(o.b)("p",null,"The secondary activations of the conductor action are responsible for orchestrating the invocations of the component actions."),Object(o.b)("p",null,"An invocation of a conductor action starts with a secondary activation and alternates secondary activations of this conductor action with invocations of the component actions. It normally ends with a secondary activation of the conductor action. In our example, the five derived activations are interleaved as follows:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"secondary ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," activation,"),Object(o.b)("li",{parentName:"ol"},Object(o.b)("em",{parentName:"li"},"triple")," activation,"),Object(o.b)("li",{parentName:"ol"},"secondary ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," activation,"),Object(o.b)("li",{parentName:"ol"},Object(o.b)("em",{parentName:"li"},"increment")," activation,"),Object(o.b)("li",{parentName:"ol"},"secondary ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," activation.")),Object(o.b)("p",null,"Intuitively, secondary activations of the conductor action decide which component actions to invoke by running before, in-between, and after the component actions. In this example, the ",Object(o.b)("em",{parentName:"p"},"tripleAndIncrement")," main function runs three times."),Object(o.b)("p",null,"Only an internal error (invocation failure or timeout) may result in an even number of derived activations."),Object(o.b)("h4",{id:"annotations"},"Annotations"),Object(o.b)("p",null,"Primary activation records include the annotations ",Object(o.b)("inlineCode",{parentName:"p"},'{ key: "conductor", value: true }')," and ",Object(o.b)("inlineCode",{parentName:"p"},'{ key: "kind", value: "sequence" }'),". Secondary activation records and activation records for component actions include the annotation ",Object(o.b)("inlineCode",{parentName:"p"},'{ key: "causedBy", value: "sequence" }'),"."),Object(o.b)("p",null,"The memory limit annotation in the primary activation record reflects the maximum memory limit across the conductor action and the component actions."),Object(o.b)("h3",{id:"continuations"},"Continuations"),Object(o.b)("p",null,"A conductor action should return either an ",Object(o.b)("em",{parentName:"p"},"error")," dictionary, i.e., a dictionary with an ",Object(o.b)("em",{parentName:"p"},"error")," field, or a ",Object(o.b)("em",{parentName:"p"},"continuation"),", i.e., a dictionary with up to three fields ",Object(o.b)("inlineCode",{parentName:"p"},"{ action, params, state }"),". In essence, a continuation specifies what component action to invoke if any, as well as the parameters for this invocation, and the state to preserve until the next secondary activation of the conductor action."),Object(o.b)("p",null,"The execution flow in our example is the following:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"The ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," action is invoked on the input dictionary ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 3 }"),". It returns ",Object(o.b)("inlineCode",{parentName:"li"},"{ action: 'triple', params: { value: 3 }, state: { $step: 1 } }")," requesting that action ",Object(o.b)("em",{parentName:"li"},"triple")," be invoked on ",Object(o.b)("em",{parentName:"li"},"params")," dictionary ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 3 }"),"."),Object(o.b)("li",{parentName:"ol"},"The ",Object(o.b)("em",{parentName:"li"},"triple")," action is invoked on dictionary ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 3 }")," returning ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 9 }"),"."),Object(o.b)("li",{parentName:"ol"},"The ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," action is automatically reactivated. The input dictionary for this activation is ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 9, $step: 1 }")," obtained by combining the result of the ",Object(o.b)("em",{parentName:"li"},"triple")," action invocation with the ",Object(o.b)("em",{parentName:"li"},"state")," of the prior secondary ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," activation (see below for details). It returns ",Object(o.b)("inlineCode",{parentName:"li"},"{ action: 'increment', params: { value: 9 }, state: { $step: 2 } }"),"."),Object(o.b)("li",{parentName:"ol"},"The ",Object(o.b)("em",{parentName:"li"},"increment")," action is invoked on dictionary ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 9 }")," returning ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 10 }"),"."),Object(o.b)("li",{parentName:"ol"},"The ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," action is automatically reactivated on dictionary ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 10, $step: 2 }")," returning ",Object(o.b)("inlineCode",{parentName:"li"},"{ params: { value: 10 } }"),"."),Object(o.b)("li",{parentName:"ol"},"Because the output of the last secondary ",Object(o.b)("em",{parentName:"li"},"tripleAndIncrement")," activation specifies no further action to invoke, this completes the execution resulting in the recording of the primary activation. The result of the primary activation is obtained from the result of the last secondary activation by extracting the value of the ",Object(o.b)("em",{parentName:"li"},"params")," field: ",Object(o.b)("inlineCode",{parentName:"li"},"{ value: 10 }"),".")),Object(o.b)("h4",{id:"detailed-specification"},"Detailed specification"),Object(o.b)("p",null,"If a secondary activation returns an error dictionary, the conductor action invocation ends and the result of this activation (output and status code) are those of this secondary activation."),Object(o.b)("p",null,"In a continuation dictionary, the ",Object(o.b)("em",{parentName:"p"},"params")," field is optional and its value if present should be a dictionary. The ",Object(o.b)("em",{parentName:"p"},"action")," field is optional and its value if present should be a string. The ",Object(o.b)("em",{parentName:"p"},"state")," field is optional and its value if present should be a dictionary. If the value ",Object(o.b)("em",{parentName:"p"},"v")," of the ",Object(o.b)("em",{parentName:"p"},"params")," field is not a dictionary it is automatically boxed into dictionary ",Object(o.b)("inlineCode",{parentName:"p"},"{ value: v }"),". If the value ",Object(o.b)("em",{parentName:"p"},"v")," of the ",Object(o.b)("em",{parentName:"p"},"state")," field is not a dictionary it is automatically boxed into dictionary ",Object(o.b)("inlineCode",{parentName:"p"},"{ state: v }"),"."),Object(o.b)("p",null,"If the ",Object(o.b)("em",{parentName:"p"},"action")," field is defined in the output of the conductor action, the runtime attempts to convert its value (irrespective of its type) into the fully qualified name of an action and invoke this action (using the default namespace if necessary). The action name should be a fully qualified name, which is of the form ",Object(o.b)("inlineCode",{parentName:"p"},"/namespace/package-name/action-name")," or ",Object(o.b)("inlineCode",{parentName:"p"},"/namespace/action-name"),". Failure to specify a fully qualified name may result in ambiguity or even a parsing error. There are four failure modes:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"parsing failure,"),Object(o.b)("li",{parentName:"ul"},"resolution failure,"),Object(o.b)("li",{parentName:"ul"},"entitlement check failure,"),Object(o.b)("li",{parentName:"ul"},"internal error (invocation failure or timeout).")),Object(o.b)("p",null,"In the last failure scenario, the conductor action invocation ends with an ",Object(o.b)("em",{parentName:"p"},"internal error")," status code and an error message describing the reason for the failure."),Object(o.b)("p",null,"If there is no error, ",Object(o.b)("em",{parentName:"p"},"action")," is invoked on the ",Object(o.b)("em",{parentName:"p"},"params")," dictionary if specified (auto boxed if necessary) or if not on the empty dictionary. Upon completion of this invocation, the conductor action is activated again. The input dictionary for this activation is a combination of the output dictionary for the component action and the value of the ",Object(o.b)("em",{parentName:"p"},"state")," field from the prior secondary conductor activation. Fields of the ",Object(o.b)("em",{parentName:"p"},"state")," dictionary (auto boxed if necessary) are added to the output dictionary of the component activation, overriding values of existing fields if necessary."),Object(o.b)("p",null,"In the first three failures scenarios, the conductor action is activated again. The input dictionary for this activation is a combination of an error object with an error message describing the reason for the failure and the value of the ",Object(o.b)("em",{parentName:"p"},"state")," field from the prior secondary conductor activation (as in the previous scenario)."),Object(o.b)("p",null,"On the other hand, if the ",Object(o.b)("em",{parentName:"p"},"action")," field is not defined in the output of the conductor action, the conductor action invocation ends. The output for the conductor action invocation is either the value of the ",Object(o.b)("em",{parentName:"p"},"params")," field in the output dictionary of the last secondary activation if defined (auto boxed if necessary) or if absent the complete output dictionary."),Object(o.b)("h3",{id:"limits"},"Limits"),Object(o.b)("p",null,"There are limits on the number of component action activations and secondary conductor activations in a conductor action invocation. These limits are assessed globally, i.e., if some components of a conductor action invocation are themselves conductor actions, the limits apply to the combined counts of activations across all the conductor action invocations."),Object(o.b)("p",null,"The maximum number ",Object(o.b)("em",{parentName:"p"},"n")," of permitted component activations is equal to the maximum number of components in a sequence action. It is configured via the same configuration parameter. The maximum number of secondary conductor activations is ",Object(o.b)("em",{parentName:"p"},"2n+1"),"."),Object(o.b)("p",null,"If the maximum number of permitted component activations is exceeded the conductor action is activated again. The input dictionary for this activation is a combination of an error object with an error message describing the reason for the failure and the value of the ",Object(o.b)("em",{parentName:"p"},"state")," field from the prior secondary conductor activation."),Object(o.b)("p",null,"If the maximum number of secondary conductor activations is exceeded, the conductor action invocation ends with an ",Object(o.b)("em",{parentName:"p"},"application error")," status code and an error message describing the reason for the failure."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Large portions of this page is copied from the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/apache/openwhisk/tree/master/docs"},"Apache OpenWhisk documentation")," on April 23rd 2021 - where there have been customisations to match Hypi's deployment this has been noted. Apache OpenWhisk and the Apache name are the property of the Apache Foundation and licensed under the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/apache/openwhisk/blob/master/LICENSE.txt"},"Apache V2 license")," ."))))}p.isMDXComponent=!0},187:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},b=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=p(n),u=a,m=b["".concat(c,".").concat(u)]||b[u]||d[u]||o;return n?i.a.createElement(m,r(r({ref:t},l),{},{components:n})):i.a.createElement(m,r({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:a,c[1]=r;for(var l=2;l<o;l++)c[l]=n[l];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);